<?xml version="1.0" encoding="utf-8"?>
<!--
//  ========================================================================
//  Copyright (c) 1995-2012 Mort Bay Consulting Pty. Ltd.
//  ========================================================================
//  All rights reserved. This program and the accompanying materials
//  are made available under the terms of the Eclipse Public License v1.0
//  and Apache License v2.0 which accompanies this distribution.
//
//      The Eclipse Public License is available at
//      http://www.eclipse.org/legal/epl-v10.html
//
//      The Apache License v2.0 is available at
//      http://www.opensource.org/licenses/apache2.0.php
//
//  You may elect to redistribute this code under either of these licenses.
//  ========================================================================
-->
<section version="5.0"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd"
         xml:id="example-logging-logback"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:xl="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:ns2="http://www.w3.org/1998/Math/MathML"
         xmlns:ns="http://docbook.org/ns/docbook">
  <title>Example: Logging with Logback</title>

  <para>This page describes how to configure Jetty for logging with
  <literal><link
  xl:href="http://logback.qos.ch/">Logback</link></literal>, which uses
 <link
  xl:href="http://slf4j.org/manual.html">Slf4j</link> and the <link
  xl:href="http://logback.qos.ch/">Logback Implementation for
  Slf4j</link>.</para>

  <simplesect>
    <title>Downloading the Required JARs</title>

    <para>You need to download three JARs, which you can do by clicking the following links:</para>

    <para><variablelist>
        <varlistentry>
          <term><filename><link
          xl:href="http://repo1.maven.org/maven2/ch/qos/logback/logback-classic/1.0.7/logback-classic-1.0.7.jar">logback-classic-1.0.7.jar</link></filename></term>

          <listitem>
            <para>The underlying logging framework and adaption layer
            for Slf4j.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><filename><link
          xl:href="http://repo1.maven.org/maven2/ch/qos/logback/logback-core/1.0.7/logback-core-1.0.7.jar">logback-core-1.0.7.jar</link></filename></term>

          <listitem>
            <para>The common implementation classes for the Logback
            project.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><filename><link
          xl:href="http://repo1.maven.org/maven2/org/slf4j/slf4j-api/1.6.6/slf4j-api-1.6.6.jar">slf4j-api-1.6.6.jar</link></filename></term>

          <listitem>
            <para>The basic Slf4j API that Jetty's Slf4jLog
            implementation uses.</para>
          </listitem>
        </varlistentry>
      </variablelist></para>
  </simplesect>

  <simplesect>
    <title>Configuring Server Classpath</title>

    <para>For the Server to use these new JARs you need to put
    them into place and tell Jetty to load them on each startup. Create a <filename>${jetty.home}/lib/logging/</filename> directory and place the three files
    you downloaded there.</para>

    <screen language="bash"><![CDATA[[jetty-distribution-${project.version}]$ ls -l ]]><emphasis
        role="bold">lib/logging/</emphasis><![CDATA[
total 632
-rw-rw-r-- 1 jetty jetty 251679 Mar 12 14:46 ]]><emphasis role="bold">logback-classic-1.0.7.jar</emphasis><![CDATA[
-rw-rw-r-- 1 jetty jetty 364399 Mar 12 14:46 ]]><emphasis role="bold">logback-core-1.0.7.jar</emphasis><![CDATA[
-rw-rw-r-- 1 jetty jetty  26176 Mar 12 14:46 ]]><emphasis role="bold">slf4j-api-1.6.6.jar</emphasis><![CDATA[
]]></screen>

    <para>Next you edit the <filename>${jetty.home}/start.ini</filename> to get Jetty to
    load these logging files into the Server classpath. Check for the following entries. Add them to the end if they are missing.</para>

    <programlisting condition="[2]" language="properties"><![CDATA[# Adding lib/logging to server classpath
OPTIONS=logging
]]></programlisting>

    <para>Now verify that the server classpath loads the three JARs.</para>

    <screen><![CDATA[[jetty-distribution-${project.version}]$ ]]><emphasis
        role="bold">java -jar start.jar --version</emphasis><![CDATA[ | grep logging
Active Options: [Server, client, ext, jmx, jsp, ]]><emphasis role="bold">logging</emphasis><![CDATA[, resources, websocket]
18:                1.0.7 | ${jetty.home}/lib/logging/]]><emphasis role="bold">logback-classic-1.0.7.jar</emphasis><![CDATA[
19:                1.0.7 | ${jetty.home}/lib/logging/]]><emphasis role="bold">logback-core-1.0.7.jar
</emphasis><![CDATA[20:                1.6.6 | ${jetty.home}/lib/logging/]]><emphasis
        role="bold">slf4j-api-1.6.6.jar</emphasis><![CDATA[
]]></screen>
  </simplesect>

  <simplesect>
    <title>Configuring Server Logging</title>

    <para>If you have a
    <filename>${jetty.home}/resources/jetty-logging.properties</filename> file,
    make sure it contains just the following:</para>

    <para><programlisting language="properties"><![CDATA[# Configure Jetty for SLf4j Logging
org.eclipse.jetty.util.log.class=org.eclipse.jetty.util.log.Slf4jLog]]></programlisting></para>

    <para>This tells Jetty to use the Slf4jLog implementation for its
    internal logging.</para>
  </simplesect>

  <simplesect>
    <title>Configuring Logback</title>

    <para>You need a
    <filename>${jetty.home}/resources/logback.xml</filename> file to define
    what you want Logback to do. It is automatically located and loaded
    on logging startup.</para>

    <para>Example <filename>${jetty.home}/resources/logback.xml</filename>
    file:</para>

    <para><programlisting language="xml"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!-- 
  Example LOGBACK Configuration File
  http://logback.qos.ch/manual/configuration.html
  -->
<configuration>
  <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
    <encoder>
      <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
    </encoder>
  </appender>

  <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>\${jetty.home}/logs/jetty.log</file>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <fileNamePattern>jetty_%d{yyyy-MM-dd}.log</fileNamePattern>
      <maxHistory>30</maxHistory>
    </rollingPolicy>

    <encoder>
      <pattern>%-4relative [%thread] %-5level %logger{35} - %msg%n</pattern>
    </encoder>
  </appender>

  <root level="info">
    <appender-ref ref="STDOUT" />
    <appender-ref ref="FILE" />
  </root>
</configuration>
]]></programlisting></para>
  </simplesect>

  <simplesect>
    <title>Scripted Installation of Logback</title>

    <programlisting language="bash"><![CDATA[#!/bin/bash
# -------------------------------------------
# FOR DEMONSTRATION PURPOSES ONLY
# USE AT YOUR OWN RISK
# ------------------------------------------- 

if [ ! -f start.ini ] ; then
    echo "ERROR: Not in \${jetty.home} directory"
    exit -1
fi

pushd lib/etc

curl -O http://repo1.maven.org/maven2/ch/qos/logback/logback-classic/1.0.7/logback-classic-1.0.7.jar
curl -O http://repo1.maven.org/maven2/ch/qos/logback/logback-core/1.0.7/logback-core-1.0.7.jar
curl -O http://repo1.maven.org/maven2/org/slf4j/slf4j-api/1.6.6/slf4j-api-1.6.6.jar

popd

if (grep -E "\-\-module=logging" start.ini)
then
    echo "Logging already present in start.ini"
else
    echo "Adding logging module to start.ini"
    echo "" >> start.ini
    echo "#" >> start.ini
    echo "# Initialize module logging" >> start.ini
    echo "#" >> start.ini
    echo "--module=logging" >> start.ini
fi

cat << EOFP > resources/jetty-logging.properties
org.eclipse.jetty.util.log.class=org.eclipse.jetty.util.log.Slf4jLog
EOFP

if [ -f resources/logback.xml ]
then
    echo "Using existing resources/logback.xml"
else
    echo "Creating new resources/logback.xml"
    cat << EOFL > resources/logback.xml
<?xml version="1.0" encoding="UTF-8"?>
<!--
  Example LOGBACK Configuration File
  http://logback.qos.ch/manual/configuration.html
  -->
<configuration>
  <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
    <encoder>
      <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
    </encoder>
  </appender>

  <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>\${jetty.base}/logs/jetty.log</file>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <fileNamePattern>jetty_%d{yyyy-MM-dd}.log</fileNamePattern>
      <maxHistory>30</maxHistory>
    </rollingPolicy>

    <encoder>
      <pattern>%-4relative [%thread] %-5level %logger{35} - %msg%n</pattern>
    </encoder>
  </appender>

  <root level="info">
    <appender-ref ref="STDOUT" />
    <appender-ref ref="FILE" />
  </root>
</configuration>
EOFL
fi
]]></programlisting>
  </simplesect>
</section>
