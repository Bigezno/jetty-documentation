<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE chapter PUBLIC '-//OASIS//DTD DocBook XML V5.0//EN'
'http://www.oasis-open.org/docbook/xml/5.0b5/dtd/docbook.dtd'
[<!ENTITY % jettyentities SYSTEM "../../../../src/main/resources/jetty.entities"> %jettyentities;]>
<section version="5.0" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:ns5="http://www.w3.org/2000/svg"
xmlns:ns4="http://www.w3.org/1998/Math/MathML" xmlns:ns3="http://www.w3.org/1999/xhtml"
xmlns:db="http://docbook.org/ns/docbook">
  <title>Sifting Logs with Logback</title>
  <para>This page describes how to create log files at the server level and name them based on an arbitrary context.
  You do this with SLF4J + Logback + Jetty Webapp Logging in the mix. Find example projects for this feature at
  github:</para>
  <para>
    <screen>https://github.com/jetty-project/jetty-and-logback-example</screen>
  </para>
  <para></para>
  <table>
    <title>GitHub Example Project</title>
    <tgroup cols="2">
      <thead>
        <row>
          <entry align="center">Modules</entry>
          <entry align="center">Description</entry>
        </row>
      </thead>
      <tbody>
        <row>
          <entry>/jetty-distro-with-logback-basic/</entry>
          <entry>Configures the jetty distribution with logback enabled at the server level with an example logback
          configuration.</entry>
        </row>
        <row>
          <entry>/jetty-distro-with-logback-sifting/</entry>
          <entry>Configures the jetty distribution with logback, centralized webapp logging, an MDC handler, and a
          sample logback configuration that performs sifting based on the incoming Host header on the requests.</entry>
        </row>
        <row>
          <entry>/jetty-slf4j-mdc-handler/</entry>
          <entry>Provides the SLF4J MDC key/value pairs that Jetty needs to perform the sample sifting.</entry>
        </row>
        <row>
          <entry>/jetty-slf4j-test-webapp/</entry>
          <entry>A sample webapp+servlet that accepts arbitrary values on a form POST and logs them via SLF4J, so that
          you can see the results of this example.</entry>
        </row>
      </tbody>
    </tgroup>
  </table>
</section>
