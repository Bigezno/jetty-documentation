<?xml version="1.0" encoding="utf-8"?>
<!--
//  ========================================================================
//  Copyright (c) 1995-2012 Mort Bay Consulting Pty. Ltd.
//  ========================================================================
//  All rights reserved. This program and the accompanying materials
//  are made available under the terms of the Eclipse Public License v1.0
//  and Apache License v2.0 which accompanies this distribution.
//
//      The Eclipse Public License is available at
//      http://www.eclipse.org/legal/epl-v10.html
//
//      The Apache License v2.0 is available at
//      http://www.opensource.org/licenses/apache2.0.php
//
//  You may elect to redistribute this code under either of these licenses.
//  ========================================================================
-->
<section version="5.0"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd"
         xml:id="configuring-jetty-request-logs"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:xl="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:ns2="http://www.w3.org/1998/Math/MathML"
         xmlns:ns="http://docbook.org/ns/docbook">
  <title>Configuring Jetty Request Logs</title>

  <para>Request logs are a record of the requests that the server has
  processed. There is one entry per request received, and commonly in the
  standard NCSA format, so you can use tools like <link
  xl:href="http://en.wikipedia.org/wiki/Webalizer">Webalizer</link> to analyze
  them conveniently.</para>

  <section xml:id="constructing-request-log-entry">
    <title>Constructing a Request Log Entry</title>

    <para>A standard request log entry includes the client IP address, date,
    method, URL, result, size, referrer, and user agent, for example:</para>

    <informalexample>
      <screen>123.4.5.6 - - [27/Aug/2004:10:16:17 +0000]
  "GET /jetty/tut/XmlConfiguration.html HTTP/1.1"
  200 76793 "http://localhost:8080/jetty/tut/logging.html"
  "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.6) Gecko/20040614 Firefox/0.8"</screen>
    </informalexample>
  </section>

  <section xml:id="implementing-request-log">
    <title>Implementing a Request Log</title>

    <para>Jetty provides an implementation called
    <emphasis><code>NCSARequestLog</code></emphasis> which supports the NCSA
    format in files that you can roll over on a daily basis.</para>

    <para>The <link xl:href="http://logback.qos.ch/">Logback Project</link>
    offers <link xl:href="http://logback.qos.ch/access.html">another
    implementation</link> of a RequestLog interface, providing rich and
    powerful HTTP-access log functionality.</para>

    <para>If neither of these options meets your needs, you can implement a
    custom request logger by implementing Jetty's <link
    xl:href="@JDURL@/org/eclipse/jetty/server/RequestLog.html"><code>RequestLog.java</code></link>
    interface and plugging it in similar to the NCSARequestLog, as shown
    below.</para>
  </section>

  <section xml:id="configuring-request-log">
    <title>Configuring a Request Log</title>

    <para>To configure a single request log for the entire Jetty Server
    instance:</para>

    <programlisting language="xml">&lt;Configure id="Server" class="org.eclipse.jetty.server.Server"&gt;
  &lt;Set name="RequestLog"&gt;
    &lt;New id="RequestLog" class="org.eclipse.jetty.server.AsyncNCSARequestLog"&gt;
      &lt;Set name="filename"&gt;/var/log/jetty/yyyy_mm_dd.request.log&lt;/Set&gt;
      &lt;Set name="append"&gt;true&lt;/Set&gt;
      &lt;Set name="extended"&gt;false&lt;/Set&gt;
      &lt;Set name="LogTimeZone"&gt;GMT&lt;/Set&gt;
    &lt;/New&gt;
  &lt;/Set&gt;
&lt;/Configure&gt;</programlisting>

    <para>The equivalent code is:</para>

    <programlisting language="java">NCSARequestLog requestLog = new NCSARequestLog("/var/logs/jetty/jetty-yyyy_mm_dd.request.log");
requestLog.setAppend(true);
requestLog.setExtended(false);
requestLog.setLogTimeZone("GMT");

server.setRequestLog(requestLog);</programlisting>

    <para>This configures a request log in
    <filename>$JETTY_HOME/logs</filename> with filenames including the date.
    Old log files are kept for 90 days before being deleted. Existing log
    files are appended to and the extended NCSA format is used in the GMT
    timezone.</para>

    <para>To examine many more configuration options, see <link
    xl:href="@JDURL@/org/eclipse/jetty/server/NCSARequestLog.html">NCSARequestLog.java</link></para>
  </section>

  <section xml:id="configuring-separate-request-log-for-web-application">
    <title>Configuring a Separate Request Log For a Web Application</title>

    <para>To configure a separate request log for a web application, add the
    following to the context XML file.</para>

    <programlisting language="xml">&lt;Configure class="org.eclipse.jetty.webapp.WebAppContext"&gt;
  ...
  &lt;Set name="handler"&gt;
    &lt;New id="RequestLog" class="org.eclipse.jetty.server.handler.RequestLogHandler"&gt;
      &lt;Set name="requestLog"&gt;
        &lt;New id="RequestLogImpl" class="org.eclipse.jetty.server.NCSARequestLog"&gt;
          &lt;Set name="filename"&gt;&lt;Property name="jetty.logs" default="./logs"/&gt;/test-yyyy_mm_dd.request.log&lt;/Set&gt;
          &lt;Set name="filenameDateFormat"&gt;yyyy_MM_dd&lt;/Set&gt;
          &lt;Set name="LogTimeZone"&gt;GMT&lt;/Set&gt;
          &lt;Set name="retainDays"&gt;90&lt;/Set&gt;
          &lt;Set name="append"&gt;true&lt;/Set&gt;
        &lt;/New&gt;
      &lt;/Set&gt;
    &lt;/New&gt;
  &lt;/Set&gt;
  ...
&lt;/Configure&gt;      </programlisting>
  </section>
</section>
