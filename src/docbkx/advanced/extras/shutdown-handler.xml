<?xml version="1.0" encoding="utf-8"?>
<!--
//  ========================================================================
//  Copyright (c) 1995-2012 Mort Bay Consulting Pty. Ltd.
//  ========================================================================
//  All rights reserved. This program and the accompanying materials
//  are made available under the terms of the Eclipse Public License v1.0
//  and Apache License v2.0 which accompanies this distribution.
//
//      The Eclipse Public License is available at
//      http://www.eclipse.org/legal/epl-v10.html
//
//      The Apache License v2.0 is available at
//      http://www.opensource.org/licenses/apache2.0.php
//
//  You may elect to redistribute this code under either of these licenses.
//  ========================================================================
-->
<section version="5.0"
         xml:id="shutdown-handler" xmlns="http://docbook.org/ns/docbook"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xl="http://www.w3.org/1999/xlink"
        >
  <title>Shutdown Handler</title>
  <section xml:id="shutdown-handler-metadata">
    <title>Info</title>
    <itemizedlist>
      <listitem>
        <para>Classname: <code>org.eclipse.jetty.server.handler.ShutdownHandler</code></para>
      </listitem>
      <listitem>
        <para>Maven Artifact: org.eclipse.jetty:jetty-server</para>
      </listitem>
      <listitem>
        <para>
          Javadoc: <link linkend="@JDURL@/org/eclipse/jetty/server/handler/ShutdownHandler.html">@JDURL@/org/eclipse/jetty/server/handler/ShutdownHandler.html</link>
        </para>
      </listitem>
      <listitem>
        <para>
          Xref: <link linkend="@JXURL@/org/eclipse/jetty/server/handler/ShutdownHandler.html">@JXURL@/org/eclipse/jetty/server/handler/ShutdownHandler.html</link>
        </para>
      </listitem>
    </itemizedlist>
  </section>
  <section xml:id="shutdown-handler-usage">
    <title>Usage</title>
  <para>
  	A handler that shuts the server down on a valid request. Used to do "soft" restarts from Java. If _exitJvm is set to true a hard System.exit() call is being made.
  </para>

  <para>
  	This is an example of how you can setup this handler directly with the Server, it can be added as a part of handler chain or collection as well.
  </para>
  <informalexample>
    <programlisting language="java">
<![CDATA[
    Server server = new Server(8080);
    HandlerList handlers = new HandlerList();
    handlers.setHandlers(new Handler[]
    { someOtherHandler, new ShutdownHandler(server,"secret password") });
    server.setHandler(handlers);
    server.start();
]]>
    </programlisting>
  </informalexample>

  <para>
  	And this is an example that you can use to call the shutdown handler from within java.
  </para>
  <informalexample>
    <programlisting language="java">
<![CDATA[
   public static void attemptShutdown(int port, String shutdownCookie) {
        try {
            URL url = new URL("http://localhost:" + port + "/shutdown?token=" + shutdownCookie);
            HttpURLConnection connection = (HttpURLConnection)url.openConnection();
            connection.setRequestMethod("POST");
            connection.getResponseCode();
            logger.info("Shutting down " + url + ": " + connection.getResponseMessage());
        } catch (SocketException e) {
            logger.debug("Not running");
            // Okay - the server is not running
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
    }
]]>
    </programlisting>
  </informalexample>
</section>
</section>
