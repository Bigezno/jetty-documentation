<?xml version="1.0" encoding="utf-8"?>
<!--
//  ========================================================================
//  Copyright (c) 1995-2012 Mort Bay Consulting Pty. Ltd.
//  ========================================================================
//  All rights reserved. This program and the accompanying materials
//  are made available under the terms of the Eclipse Public License v1.0
//  and Apache License v2.0 which accompanies this distribution.
//
//      The Eclipse Public License is available at
//      http://www.eclipse.org/legal/epl-v10.html
//
//      The Apache License v2.0 is available at
//      http://www.opensource.org/licenses/apache2.0.php
//
//  You may elect to redistribute this code under either of these licenses.
//  ========================================================================
-->
<section version="5.0" xml:id="embedded-secured-hello-handler"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xl="http://www.w3.org/1999/xlink"
         xmlns:ns5="http://www.w3.org/1998/Math/MathML"
         xmlns:ns4="http://www.w3.org/2000/svg"
         xmlns:ns3="http://www.w3.org/1999/xhtml"
         xmlns:ns="http://docbook.org/ns/docbook">
  <title>Secured Hello Handler</title>
  <para>
    This example shows how to wrap one handler with another one that handles security.  We have a simple Hello Handler that just return a greeting but add on the restriction that to get this greeting you must authenticate.  Another thing to remember is that this example uses the ConstraintSecurityHandler which is what supports the security mappings inside of the servlet api, it could be easier to show just the SecurityHandler usage, but the constraint provides more configuration power.  If you don't need that you can drop the Constaint bits and use just the SecurityHandler.
  </para>
  <example>
    <title><link xl:href="@GITURL@/examples/embedded/src/main/java/org/eclipse/jetty/embedded/SecuredHelloHandler.java">SecuredHelloHandler.java</link></title> 
  <programlisting language="rjava-no-parse">
    <filename>
      @GITURL@/examples/embedded/src/main/java/org/eclipse/jetty/embedded/SecuredHelloHandler.java
    </filename>
  </programlisting>
  </example>
  <section>
    <title>Run it!</title>
    <para>
      After you have started things up you should be able to navigate to http://localhost:8080/index.html (assuming one is in the resource base directory) and you are good to go.
    </para>
  </section>
  <section>
    <title>The Realm Properties File</title>
    <informalexample>
      <programlisting language="rproperties">
        <filename>
          @GITURL@/examples/embedded/src/test/resources/realm.properties
        </filename>
      </programlisting>
    </informalexample>
  </section>
  <section>
    <title>Maven Coordinates</title>
    <para>
      To use this example in your project you will need the following maven dependencies declared.
    </para>
    <informalexample>
      <programlisting language="xml">
<![CDATA[
<dependency>
  <groupId>org.eclipse.jetty</groupId>
  <artifactId>jetty-server</artifactId>
  <version>${project.version}</version>
</dependency>
]]>
      </programlisting>
    </informalexample>
  </section>
</section>
