<?xml version="1.0" encoding="utf-8"?>
<!--
//  ========================================================================
//  Copyright (c) 1995-2012 Mort Bay Consulting Pty. Ltd.
//  ========================================================================
//  All rights reserved. This program and the accompanying materials
//  are made available under the terms of the Eclipse Public License v1.0
//  and Apache License v2.0 which accompanies this distribution.
//
//      The Eclipse Public License is available at
//      http://www.eclipse.org/legal/epl-v10.html
//
//      The Apache License v2.0 is available at
//      http://www.opensource.org/licenses/apache2.0.php
//
//  You may elect to redistribute this code under either of these licenses.
//  ========================================================================
-->
<section version="5.0" xml:id="gzip-filter"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xl="http://www.w3.org/1999/xlink"
         xmlns:ns5="http://www.w3.org/1999/xhtml"
         xmlns:ns4="http://www.w3.org/1998/Math/MathML"
         xmlns:ns3="http://www.w3.org/2000/svg"
         xmlns:ns="http://docbook.org/ns/docbook">
  <title>Gzip Handler</title>

  <section xml:id="gzip-filter-metadata">
    <title>Info</title>

    <itemizedlist>
      <listitem>
        <para>Classname:
        <code>org.eclipse.jetty.server.handler.gzip.GzipHandler</code></para>
      </listitem>

      <listitem>
        <para>Maven Artifact: org.eclipse.jetty:jetty-servlets</para>
      </listitem>

      <listitem>
        <para>Javadoc: <link
        xl:href="@JDURL@/org/eclipse/jetty/server/handler/gzip/GzipHandler.html">
        @JDURL@/org/eclipse/jetty/server/handler/gzip/GzipHandler.html
        </link></para>
      </listitem>

      <listitem>
        <para>Xref: <link
        xl:href="@JXURL@/org/eclipse/jetty/server/handler/gzip/GzipHandler.html">
        @JXURL@/org/eclipse/jetty/server/handler/gzip/GzipHandler.html
        </link></para>
      </listitem>
    </itemizedlist>
  </section>

  <section xml:id="gzip-filter-usage">
    <title>Usage</title>

    <para>The Jetty GzipHandler is a compression handler that you can apply to
    any dynamic resource (servlet). It fixes many of the bugs in commonly
    available compression filters: it works with asynchronous servlets; it
    handles all ways to set content length. We have tested it with Jetty
    continuations and suspending requests. Some user-agents might be excluded
    from compression to avoid common browser bugs (yes, this means
    IE!).</para>

    <para>The GzipHandler is added to the entire server by the
    etc/jetty-gzip.xml file from the gzip.mod module. It may also be added to
    individual contexts in a context xml file.</para>
  </section>

  <section xml:id="gzip-filter-rules">
    <title>Gzip Rules</title>

    <para>GZIP Handler will gzip or deflate the content of a response
    if:</para>

    <itemizedlist>
      <listitem>
        <para>It is mapped to a matching path</para>
      </listitem>

      <listitem>
        <para>The request method is configured to support gzip</para>
      </listitem>

      <listitem>
        <para>The request is not from an excluded User-Agent</para>
      </listitem>

      <listitem>
        <para>accept-encoding header is set to either gzip, deflate or a
        combination of those</para>
      </listitem>

      <listitem>
        <para>The response status code is &gt;=200 and &lt;300</para>
      </listitem>

      <listitem>
        <para>The content length is unknown or more than the minGzipSize
        initParameter or the minGzipSize is 0(default)</para>
      </listitem>

      <listitem>
        <para>The content-type does not match an excluded mime-type</para>
      </listitem>

      <listitem>
        <para>No content-encoding is specified by the resource</para>
      </listitem>
    </itemizedlist>

    <para>If both gzip and deflate are specified in the accept-encoding
    header, then gzip will be used.</para>

    <para>Compressing the content can greatly improve the network bandwidth
    usage, but at a cost of memory and CPU cycles. The <link
    linkend="default-servlet">DefaultServlet</link> is capable of serving
    pre-compressed static content, which saves memory and CPU. By default, the
    GzipHandler will check to see if pre-compressed content exists, and pass
    the request through to be handled by the DefaultServlet.</para>
  </section>

  <section xml:id="gzip-filter-init">
    <title>Gzip Configuration</title>

    <variablelist>
      <varlistentry>
        <term>minGzipSize</term>

        <listitem>
          <para>Content will only be compressed if content length is either
          unknown or greater than minGzipSize.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>checkGzExists</term>

        <listitem>
          <para>True by default. If set to false, the handler will not check
          for pre-compressed content.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>compressionLevel</term>

        <listitem>
          <para>The compression level used for deflate compression.
          (0-9).</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>includedMethods</term>

        <listitem>
          <para>List of HTTP methods to compress. If not set, only GET
          requests are compressed.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>includedMimeTypes</term>

        <listitem>
          <para>List of mime types to compress.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>excludedMimeTypes</term>

        <listitem>
          <para>List of mime types not to compress.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>excludedAgentPatterns</term>

        <listitem>
          <para>A list of regex patterns for User-Agent names from which
          requests should not be compressed.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>excludedPaths</term>

        <listitem>
          <para>List of paths to exclude from compression. Does a
          String.startsWith(String) comparison to check if the path matches.If
          it does match -&gt; no compression. To match subpaths use
          excludePathPatterns instead.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>includedPaths</term>

        <listitem>
          <para>List of paths to consider for compression.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>includePaths</term>

        <listitem>
          <para>List of paths to definitely consider for compression.</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </section>
</section>
