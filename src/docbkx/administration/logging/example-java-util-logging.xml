<?xml version="1.0" encoding="utf-8"?>
<!--
//  ========================================================================
//  Copyright (c) 1995-2012 Mort Bay Consulting Pty. Ltd.
//  ========================================================================
//  All rights reserved. This program and the accompanying materials
//  are made available under the terms of the Eclipse Public License v1.0
//  and Apache License v2.0 which accompanies this distribution.
//
//      The Eclipse Public License is available at
//      http://www.eclipse.org/legal/epl-v10.html
//
//      The Apache License v2.0 is available at
//      http://www.opensource.org/licenses/apache2.0.php
//
//  You may elect to redistribute this code under either of these licenses.
//  ========================================================================
-->
<section version="5.0"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd"
         xml:id="example-logging-java-util-logging"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:xl="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:ns2="http://www.w3.org/1998/Math/MathML"
         xmlns:ns="http://docbook.org/ns/docbook">
  <title>Example: Logging with Java's java.util.logging via Slf4j</title>

  <para>It is possible to have the Jetty Server logging configured so that
  <literal><link
  xl:href="http://docs.oracle.com/javase/7/docs/api/java/util/logging/package-summary.html">java.util.logging</link></literal>
  controls the output of logging events produced by Jetty.</para>

  <para>This example demonstrates how to configuring Jetty for logging to
  <literal><link
  xl:href="http://docs.oracle.com/javase/7/docs/api/java/util/logging/package-summary.html">java.util.logging</link></literal>
  via <link xl:href="http://slf4j.org/manual.html">Slf4j</link> and the <link
  xl:href="http://slf4j.org/manual.html#swapping">Slf4j binding layer for
  java.util.logging</link>. If you want to use the built-in native JavaUtilLog
  implementation, see <link
  linkend="example-logging-java-util-logging-native"/></para>

  <simplesect>
    <title>Quick Setup of java.util.logging (Slf4j) Logging using Jetty
    9.2.1+</title>

    <para>A convenient replacement <literal>logging</literal> module has been
    created to bootstrap your <filename>${jetty.base}</filename> directory for
    logging with java.util.logging.</para>

    <screen><![CDATA[[mybase]$ mkdir modules
[mybase]$ cd modules

[modules]$ ]]><emphasis role="bold">curl -O https://raw.githubusercontent.com/jetty-project/logging-modules/master/java.util.logging-slf4j/logging.mod</emphasis><![CDATA[
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100   826  100   826    0     0   2468      0 --:--:-- --:--:-- --:--:--  2473
[modules]$ cd ..

[mybase]$ ]]><emphasis role="bold">java -jar /opt/jetty-dist/start.jar --add-to-start=logging</emphasis><![CDATA[
INFO: logging         initialised in ${jetty.base}/start.ini (appended)
MKDIR: ${jetty.base}/logs
DOWNLOAD: http://central.maven.org/maven2/org/slf4j/slf4j-jdk14/1.6.6/slf4j-jdk14-1.6.6.jar to lib/logging/slf4j-jdk14-1.6.6.jar
DOWNLOAD: http://central.maven.org/maven2/org/slf4j/slf4j-api/1.6.6/slf4j-api-1.6.6.jar to lib/logging/slf4j-api-1.6.6.jar
DOWNLOAD: https://raw.githubusercontent.com/jetty-project/logging-modules/master/java.util.logging-slf4j/jetty-logging.xml to etc/jetty-logging.xml
DOWNLOAD: https://raw.githubusercontent.com/jetty-project/logging-modules/master/java.util.logging-slf4j/logging.properties to resources/logging.properties
DOWNLOAD: https://raw.githubusercontent.com/jetty-project/logging-modules/master/java.util.logging-slf4j/jetty-logging.properties to resources/jetty-logging.properties
INFO: resources       initialised transitively
INFO: resources       enabled in     ${jetty.base}/start.ini

[mybase]$ ]]><emphasis role="bold">java -jar /opt/jetty-dist/start.jar</emphasis><![CDATA[
]]></screen>
  </simplesect>

  <simplesect>
    <title>That's Cool! But what just happened?</title>

    <para>The replacement <filename>logging.mod</filename> performs a number
    of tasks.</para>

    <orderedlist>
      <listitem>
        <para><filename>mybase</filename> is a
        <filename>${jetty.base}</filename> directory</para>
      </listitem>

      <listitem>
        <para>The jetty-distribution is unpacked (and untouched) into
        <filename>/opt/jetty-dist/ </filename>and becomes the
        <filename>${jetty.home}</filename> directory for this
        demonstration.</para>
      </listitem>

      <listitem>
        <para>The <command>curl</command> command downloads the replacement
        <filename>logging.mod</filename> and puts it into the
        <filename>${jetty.base}/modules/</filename> directory for use by
        mybase only.</para>
      </listitem>

      <listitem>
        <para>The <command>start.jar --add-to-start=logging</command> command
        performs a number of steps to make the logging module available to the
        <filename>${jetty.base}</filename> configuration.</para>

        <orderedlist>
          <listitem>
            <para>The <command>--module=logging</command> command is added to
            the <filename>${jetty.base}/start.ini</filename>
            configuration</para>
          </listitem>

          <listitem>
            <para>Required <filename>${jetty.base}</filename> directories are
            created: <filename>${jetty.base}/logs</filename> and
            <filename>${jetty.base}/resources</filename></para>
          </listitem>

          <listitem>
            <para>Required libraries are downloaded (if not present already):
            slf4j-api, and slf4j-jdk14.</para>

            <para>The libraries are put in the
            <filename>${jetty.base}/lib/logging/</filename> directory.</para>
          </listitem>

          <listitem>
            <para>Required configuration files are downloaded (if not present
            already): <filename>jetty-logging.properties</filename>, and
            <filename>logging.properties</filename></para>

            <para>The configuration files are put in the
            <filename>${jetty.base}/resources/</filename> directory.</para>
          </listitem>

          <listitem>
            <para>Required <literal>java.util.logging</literal> initialization
            commands are downloaded (if not present already):
            <filename>jetty-logging.xml</filename></para>

            <para>The xml file is put in the
            <filename>${jetty.base}/etc/</filename> directory.</para>
          </listitem>
        </orderedlist>
      </listitem>

      <listitem>
        <para>At this point you have your <filename>mybase</filename>
        configured so that the jetty server itself will log using
        java.util.logging, using the java.util.logging configuration found in
        <filename>mybase/resources/logging.properties</filename></para>
      </listitem>
    </orderedlist>

    <para>You can verify the server classpath by using the <command>start.jar
    --list-config</command> command.</para>

    <para>In essence, Jetty is now configured to emit its own logging events
    to slf4j, and slf4j itself is using the static log binder found in
    slf4j-jdk14.jar. Making all Jetty + Slf4j + java.util.logging events
    emitted by the Jetty server go to java.util.logging for routing (to
    console, file, etc...)</para>

    <para>If you have any custom java.util.logging handlers that you want to
    use, put the implementation jar in your
    <filename>${jetty.base}/lib/logging/</filename> directory and reference
    them in the
    <filename>${jetty.base}/resources/logging.properties</filename>
    file.</para>

    <note>
      <para><literal>java.util.logging</literal> is configured via the
      <filename>${jetty.base}/resources/logging.properties</filename> file
      during a valid startup of Jetty. This means that if there is any startup
      errors that occur before <literal>java.util.logging</literal> is
      configured, they will likely be lost and/or not routed through your
      configuration. (Other logging frameworks are more reliable in that they
      always initialize and configure on first use, unlike
      java.util.logging)</para>

      <para>While it is possible to configure java.util.logging sooner, even
      at JVM startup, the example demonstrated here does not show this
      technique. For more information consult the <link
      xl:href="http://docs.oracle.com/javase/7/docs/api/java/util/logging/LogManager.html">official
      java.util.logging.LogManager javadoc documentation from
      Oracle</link>.</para>
    </note>

    <para/>
  </simplesect>
</section>
