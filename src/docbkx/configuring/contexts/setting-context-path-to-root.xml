<?xml version="1.0" encoding="utf-8"?>
<!--
//  ========================================================================
//  Copyright (c) 1995-2012 Mort Bay Consulting Pty. Ltd.
//  ========================================================================
//  All rights reserved. This program and the accompanying materials
//  are made available under the terms of the Eclipse Public License v1.0
//  and Apache License v2.0 which accompanies this distribution.
//
//      The Eclipse Public License is available at
//      http://www.eclipse.org/legal/epl-v10.html
//
//      The Apache License v2.0 is available at
//      http://www.opensource.org/licenses/apache2.0.php
//
//  You may elect to redistribute this code under either of these licenses.
//  ========================================================================
-->
<section version="5.0"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd"
         xml:id="setting-context-path-to-root"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:xl="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:ns="http://docbook.org/ns/docbook">
  <title>Setting Context Path to / (root)</title>

  <para>The root context is the top level context within a server, which is
  configured with a context path of "/". However, somewhat confusingly, the
  Servlet API will report the context path of a request to the root context as
  the empty string "". This is done to maintain the truisms that:
  getRequestURI() == getContextPath()+getServletPath()+getPathInfo() ; and
  that the string returned from getServletPath() and/or getPathInfo() always
  starts with "/".</para>

  <para/>

  <para>To set your context path to / (the root context path), you need to use
  a Context deployment.</para>

  <note>
    <para>Be aware of the following:</para>

    <itemizedlist>
      <listitem>
        <para>Java Servlet Specification 2.5 discourages an empty context path
        string, and Java Servlet Specification 3.0 effectively forbids
        it.</para>
      </listitem>

      <listitem>
        <para>In Jetty 7.x, the AppProviders assigned to the DeploymentManager
        (see <xref linkend="using-deployment-manager"/>) handle context path
        assignment.</para>
      </listitem>

      <listitem>
        <para>By default on the Jetty Distribution, both the WebAppProvider
        and ContextProvider are enabled. This is important to know because it
        influences your decision on where to put the
        <filename>mywebapp.war</filename> file.</para>
      </listitem>

      <listitem>
        <para>Examine the <filename>${jetty.home}/start.ini</filename> file,
        and you see that it contains both references to
        <code>etc/jetty-webapps.xml</code> and
        <code>etc/jetty-contexts.xml</code>.</para>
      </listitem>
    </itemizedlist>
  </note>

  <section xml:id="root-using-the-webapp-provider">
    <title>Using the WebAppProvider</title>

    <para>The WebAppProvider's role (see <xref
    linkend="using-webapp-provider"/>) is to look in the <filename>
    ${jetty.home}/webapps/</filename> directory for any deployable
    applications (such as *.war), and deploy them onto a context of the same
    name as the filename. For example, the WebAppProvider deploys <filename>
    ${jetty.home}/webapps/MyApp-2.4.war</filename> into the context
    <code>/MyApp-2.4</code>. There is also the special <code>root.war</code>
    reserved word that deploys into the context / . While this is the easiest
    deployment mechanism, it sacrifices control over deployment
    specifics.</para>
  </section>

  <section xml:id="using-the-context-provider">
    <title>Using the ContextProvider</title>

    <para>The ContextProvider's role (see <xref
    linkend="using-context-provider"/>) is to look in the <filename>
    ${jetty.home}/contexts/</filename> directory for any jetty-xml formatted,
    deployable contexts. This deployment mechanism gives you the maximum
    control over the deployment, as this XML file can control anything that is
    ultimately resolved to an
    <code>org.eclipse.jetty.server.handler.ContextHandler</code> base class,
    of which WebAppContexts (WARs, servlets, etc.) are part. The most common
    use is to specify a WebAppContext-based XML file, and control things such
    as what files and directories make up the web application, what temporary
    directory to use, and even what Context Path to use.</para>
  </section>

  <section xml:id="setting-context-path-with-contextprovider">
    <title>Setting the Context Path with the
    <code>ContextProvider</code></title>

    <para>To set the context path to / , follow these steps.</para>

    <orderedlist>
      <listitem>
        <para>Make sure your ContextProvider-based deployments are enabled in
        the <filename>start.ini</filename>. That is, make sure that
        <code>etc/jetty-context.xml</code> is present.</para>
      </listitem>

      <listitem>
        <para>Create a <code>${jetty.home}/contexts/mywebapp.xml</code> that
        declares the <code>/</code> option.</para>
      </listitem>

      <listitem>
        <para>If you have the <code>etc/jetty-webapps.xml</code> present in
        your <filename>start.ini</filename>, do not put your
        <code>mywebapp.war</code> in
        <filename>${jetty.home}/webapps</filename> because doing so causes the
        WebAppProvider to also deploy the same webapp, and confuses your
        deployment.</para>
      </listitem>

      <listitem>
        <para>Finally, you can see how the jetty distribution itself does this
        by examining <filename>${jetty.home}/contexts/test.xml</filename>.
        Jetty loads the <filename>${jetty.home}/webapps/test.war</filename>
        via the ContextProvider's use of the
        <filename>${jetty.home}/contexts/test.xml</filename> into the /
        context path.</para>
      </listitem>
    </orderedlist>
  </section>
</section>
