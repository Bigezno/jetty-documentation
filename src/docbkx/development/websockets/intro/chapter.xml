<?xml version="1.0" encoding="utf-8"?>
<!--
//  ========================================================================
//  Copyright (c) 1995-2012 Mort Bay Consulting Pty. Ltd.
//  ========================================================================
//  All rights reserved. This program and the accompanying materials
//  are made available under the terms of the Eclipse Public License v1.0
//  and Apache License v2.0 which accompanies this distribution.
//
//      The Eclipse Public License is available at
//      http://www.eclipse.org/legal/epl-v10.html
//
//      The Apache License v2.0 is available at
//      http://www.opensource.org/licenses/apache2.0.php
//
//  You may elect to redistribute this code under either of these licenses.
//  ========================================================================
-->
<chapter version="5.0"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd"
         xml:id="websocket-intro" xmlns="http://docbook.org/ns/docbook"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:xl="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:ns2="http://www.w3.org/1998/Math/MathML"
         xmlns:ns="http://docbook.org/ns/docbook">
  <title>WebSocket Introduction</title>

  <para>WebSocket is a new protocol for bidirectional communications over
  HTTP.</para>

  <para>It is based on a low level framing protocol that delivers messages in
  either UTF-8 TEXT or BINARY format.</para>

  <para>A single message in WebSocket can be of any size (the underlying
  framing however does have a single frame limit of <link
  xl:href="http://en.wikipedia.org/wiki/9223372036854775807">63-bits</link>)</para>

  <para>There can be an unlimited number of messages sent.</para>

  <para>Messages are sent sequentially, the base protocol does not support
  interleaved messages.</para>

  <para>A WebSocket connection goes through some basic state changes:</para>

  <table>
    <title>WebSocket connection states</title>

    <tgroup cols="2">
      <colspec align="center" colwidth="20%"/>

      <thead>
        <row>
          <entry align="center">State</entry>

          <entry align="center">Description</entry>
        </row>
      </thead>

      <tbody>
        <row>
          <entry>CONNECTING</entry>

          <entry>A HTTP Upgrade to WebSocket is in progress</entry>
        </row>

        <row>
          <entry>OPEN</entry>

          <entry>The HTTP Upgrade succeeded and the socket is now open and
          ready to read / write</entry>
        </row>

        <row>
          <entry>CLOSING</entry>

          <entry>A WebSocket Close Handshake has been started</entry>
        </row>

        <row>
          <entry>CLOSED</entry>

          <entry>WebSocket is now closed, no more read/write possible</entry>
        </row>
      </tbody>
    </tgroup>
  </table>

  <para>When a WebSocket is closed, a <link
  xl:href="@JDURL@/org/eclipse/jetty/websocket/api/StatusCode.html">status
  code</link> and short reason string is provided.</para>

  <section xml:id="ws-intro-provides">
    <title>What Jetty provides</title>

    <para>Jetty provides an implementation of the following standards and
    specs.</para>

    <variablelist>
      <varlistentry>
        <term><link
        xl:href="http://tools.ietf.org/html/rfc6455">RFC-6455</link></term>

        <listitem>
          <para>The WebSocket Protocol</para>

          <para>We support the version 13 of the released and final
          spec.</para>

          <para>Jetty tests its WebSocket protocol implementation using the
          <link xl:href="http://autobahn.ws/testsuite">autobahn
          testsuite</link>.</para>

          <important>
            <para>The early drafts of WebSocket were supported in Jetty 7 and
            Jetty 8, but this support has been removed in Jetty 9.</para>

            <para>This means that Jetty 9 will not support the old browsers
            that implemented the early drafts of WebSocket. (such as Safari
            5.0 or Opera 12)</para>
          </important>

          <tip>
            <para>Want to know if the browser you are targeting supports
            WebSocket?</para>

            <para>Use <link
            xl:href="http://caniuse.com/websockets">caniuse.com/websockets</link>
            to find out.</para>
          </tip>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><link
        xl:href="http://www.jcp.org/en/jsr/detail?id=356">JSR-356</link></term>

        <listitem>
          <para>The Java WebSocket API
          (<classname>javax.websocket</classname>)</para>

          <para>This is the official Java API for working with
          WebSockets.</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <para>Unstable standards and specs:</para>

    <variablelist>
      <varlistentry>
        <term><link
        xl:href="https://datatracker.ietf.org/doc/draft-ietf-hybi-websocket-perframe-compression/">perframe-compression</link></term>

        <listitem>
          <para>Per Frame Compression Extension.</para>

          <para>An early extension draft from the Google/Chromium team that
          would provide WebSocket frame compression.</para>

          <para>perframe-compression using deflate algorithm is present on
          many versions of Chrome/Chromium.</para>

          <para>Jetty's support for perframe-compression is based on the
          draft-04 spec.</para>

          <para>This standard is being replaced with
          permessage-compression.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><link
        xl:href="https://datatracker.ietf.org/doc/draft-tyoshino-hybi-permessage-compression/">permessage-compression</link></term>

        <listitem>
          <para>Per Frame Compression Extension.</para>

          <para>This is the replacement for perframe-compression, switching
          the compression to being based on the entire message, not the
          individual frames.</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </section>

  <section xml:id="ws-intro-api">
    <title>WebSocket APIs</title>

    <para>APIs and libraries to implement your WebSockets using Jetty.</para>

    <variablelist>
      <varlistentry>
        <term linkend="websocket-jetty">Jetty WebSocket API</term>

        <listitem>
          <para>The basic common API for creating and working with WebSockets
          using Jetty.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term linkend="jetty-websocket-server-api">Jetty WebSocket Server
        API</term>

        <listitem>
          <para>Write WebSocket Server Endpoints for Jetty.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term linkend="jetty-websocket-client-api">Jetty WebSocket Client
        API</term>

        <listitem>
          <para>Connect to WebSocket servers with Jetty.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Java WebSocket Client API</term>

        <listitem>
          <para>The new standard Java WebSocket Client API
          (<classname>javax.websocket</classname>) [JSR-356]</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Java WebSocket Server API</term>

        <listitem>
          <para>The new standard Java WebSocket Server API
          (<classname>javax.websocket.server</classname>) [JSR-356]</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </section>

  <section>
    <title>Enabling WebSocket</title>

    <para>To enable websocket, you need to <link
    linkend="enabling-modules">enable</link> the <code>websocket</code> <link
    linkend="enabling-modules">module</link>.</para>

    <para>Once this module is enabled for your jetty base, it will apply to
    all webapps deployed to that base. If you want to be more selective about
    which webapps use websocket, then you can:</para>

    <variablelist>
      <varlistentry>
        <term>Disable jsr-356 for a particular webapp:</term>

        <listitem>
          <para>You can disable jsr-356 for a particular webapp by setting the
          <link linkend="context_attributes">context attribute</link>
          <code>org.eclipse.jetty.websocket.jsr356</code> to
          <code>false</code>. This will mean that websockets are not available
          to your webapp, however deployment time scanning for
          websocket-related classes such as endpoints will still occur. This
          can be a significant impost if your webapp contains a lot of classes
          and/or jar files. To completely disable websockets and avoid all
          setup costs associated with it for a particular webapp, use instead
          the context attribute
          <code>org.eclipse.jetty.containerInitializerExclusionPattern</code>,
          described next, which allows you to exclude the websocket
          ServletContainerInitializer that causes the scanning.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Completely disable jsr-356 for a particular webapp:</term>

        <listitem>
          <para>Set the
          <code>org.eclipse.jetty.containerInitializerExclusionPattern</code>
          <link linkend="context_attributes">context attribute</link> to
          include
          <code>org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer</code>.
          Here's an example of doing this in code, although you can do the
          <link linkend="intro-jetty-configuration-webapps">same in
          xml</link>:</para>

          <programlisting language="java"><![CDATA[WebAppContext context = new WebAppContext();
context.setAttribute("org.eclipse.jetty.containerInitializerExclusionPattern", 
                     "org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer|com.acme.*");]]></programlisting>

          <para/>
        </listitem>
      </varlistentry>
    </variablelist>
  </section>
</chapter>
