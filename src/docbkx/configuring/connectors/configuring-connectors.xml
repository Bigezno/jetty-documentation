<?xml version="1.0" encoding="utf-8"?>
<!--
//  ========================================================================
//  Copyright (c) 1995-2012 Mort Bay Consulting Pty. Ltd.
//  ========================================================================
//  All rights reserved. This program and the accompanying materials
//  are made available under the terms of the Eclipse Public License v1.0
//  and Apache License v2.0 which accompanies this distribution.
//
//      The Eclipse Public License is available at
//      http://www.eclipse.org/legal/epl-v10.html
//
//      The Apache License v2.0 is available at
//      http://www.opensource.org/licenses/apache2.0.php
//
//  You may elect to redistribute this code under either of these licenses.
//  ========================================================================
-->
<section version="5.0"
xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd"
xml:id="jetty-connectors" xmlns="http://docbook.org/ns/docbook" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xl="http://www.w3.org/1999/xlink"
xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:ns2="http://www.w3.org/1998/Math/MathML"
xmlns:ns="http://docbook.org/ns/docbook">
  <title>Configuring Connectors</title>
  <para>Connectors are the mechanism through which Jetty accepts network connections for various protocols. Configuring
  a connector is a combination of configuring the network parameters on the connector itself (eg port), configuring the
  services used by the connector (eg executors &amp; schedulers) and configuration of the connection factories used to
  instantiate and configure the protocol for an accepted connection. Jetty primarily uses a single connector type
  called <link
  xl:href="http://download.eclipse.org/jetty/stable-9/apidocs/org/eclipse/jetty/server/ServerConnector.html">
  ServerConnector</link>.</para>
  <note>
    <para>Prior to Jetty-9, the type of the connector was used to specify both the protocol and the implementation used
    (eg NIO vs blocking IO). In Jetty-9 the is only an NIO connector and the protocol is now configured by a collection
    of ConnectionFactory on the connector. Thus Jetty-9 primarily uses a single connector type: ServerConnector</para>
  </note>
  <para>The standard jetty distribution comes with the following Jetty IoC XML files that create and configure
  connectors, which should be read in conjunction with this section:</para>
  <variablelist>
    <varlistentry>
      <term>
        <link
        xl:href="http://git.eclipse.org/c/jetty/org.eclipse.jetty.project.git/plain/jetty-server/src/main/config/etc/jetty-http.xml">jetty-http.xml</link>
      </term>
      <listitem>
        <para>Instantiates a Server connector with a HTTP connection factory. HTTP connections may be upgraded to
        Websocket.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        <link
        xl:href="http://git.eclipse.org/c/jetty/org.eclipse.jetty.project.git/plain/jetty-server/src/main/config/etc/jetty-https.xml">jetty-https.xml</link>
      </term>
      <listitem>
        <para>Instantiates a Server connector with a TLS connection factory chained to a HTTP connection. This accepts
        TLS connections and are assumed to carry the HTTP protocol.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        <link
        xl:href="http://git.eclipse.org/c/jetty/org.eclipse.jetty.project.git/plain/jetty-spdy/spdy-example-webapp/src/main/config/etc/jetty-spdy.xml">jetty-spdy.xml</link>
      </term>
      <listitem>
        <para>Instantiates a Server connector with a TLS connection factory chained to a NPN (Next Protocol
        Negotiation) connection factory. Once an accepted TLS connection is chained to a NPN connection which replaces
        itself with a connection for a protocol it negotiates with the client, which may be a version of SPDY or HTTP.
        If the client does not support NPN, then HTTP is assumed.</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <section>
    <title>Constructing a ServerConnector</title>
    <para>The services used by a ServerConnector instance are set by constructor injection and once instantiated cannot
    be changed. Most of the services may be defaulted with null or 0 values so that a reasonable default is used, thus
    for most purposes only the Server and the Connection Factories need to be passed to the connector constructor. In
    Jetty IoC XML this can be done with:</para>
    <informalexample>
      <programlisting language="xml">
<![CDATA[<New class="org.eclipse.jetty.server.ServerConnector">
  <Arg name="server"><Ref id="Server" /></Arg>
  <Arg name="factories">
    <Array type="org.eclipse.jetty.server.ConnectionFactory">
      <!-- insert one or more factories here -->
    </Array>
  </Arg>
  <!-- set connector fields here -->
</New>]]>
      </programlisting>
    </informalexample>
    <para>The other arguments that can be passed when constructing a Server Connector may be seen in the <link
    xl:href="http://download.eclipse.org/jetty/stable-9/apidocs/org/eclipse/jetty/server/ServerConnector.html#ServerConnector%28org.eclipse.jetty.server.Server,%20java.util.concurrent.Executor,%20org.eclipse.jetty.util.thread.Scheduler,%20org.eclipse.jetty.io.ByteBufferPool,%20int,%20int,%20org.eclipse.jetty.server.ConnectionFactory...%29">javadoc</link>.</para>
  </section>
  <section>
    <title>Configuring ServerConnector network settings.</title>
    <para>The connector network settings are configured by calling setters on the connector before it is started. For
    example the port can be set with the Jetty IoC XML:</para>
    <informalexample>
      <programlisting language="xml">
<![CDATA[<New class="org.eclipse.jetty.server.ServerConnector">
  <Arg name="server"><Ref id="Server" /></Arg>
  <Arg name="factories"><!-- insert one or more factories here --></Arg>

  <Set name="port">8080</Set>
</New>]]>
      </programlisting>
    </informalexample>
    <para>Values in Jetty IoC can also be parameterized so that they may be passed from property files or set on the
    command line. Thus typically the port is set with Jetty IoC XML that uses the Property element:</para>
    <informalexample>
      <programlisting language="xml">
<![CDATA[<New class="org.eclipse.jetty.server.ServerConnector">
  <Arg name="server"><Ref id="Server" /></Arg>
  <Arg name="factories"><!-- insert one or more factories here --></Arg>

  <Set name="port"><Property name="jetty.port" default="8080"/></Set>
</New>]]>
      </programlisting>
    </informalexample>
    <para>The network settings that can be set on the <link
    xl:href="http://download.eclipse.org/jetty/stable-9/apidocs/org/eclipse/jetty/server/ServerConnector.html">
    ServerConnector</link> include:</para>
    <table>
      <title>Connector configuration</title>
      <tgroup cols="2">
        <colspec colwidth="22*" />
        <colspec colwidth="78*" />
        <thead>
          <row>
            <entry align="center">Field</entry>
            <entry align="center">Description</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>host</entry>
            <entry>The network interface this connector binds to as an IP address or a hostname. If null or 0.0.0.0,
            then bind to all interfaces.</entry>
          </row>
          <row>
            <entry>port</entry>
            <entry>The configured port for the connector or 0 a random available port may be used (selected port
            available via getLocalPort()).</entry>
          </row>
          <row>
            <entry>idleTimeout</entry>
            <entry>The time in milliseconds that the connection can be idle before it is closed.</entry>
          </row>
          <row>
            <entry>defaultProtocol</entry>
            <entry>The name of the default protocol used to select a Connection Factory instance.</entry>
          </row>
          <row>
            <entry>stopTimeout</entry>
            <entry>The time in milliseconds to wait while gently stopping a connector.</entry>
          </row>
          <row>
            <entry>acceptQueueSize</entry>
            <entry>The size of the pending connection backlog. The exact interpretation is JVM and Operating system
            specific and may be ignored. Higher values allow more connections to be waiting pending and acceptor
            thread.</entry>
          </row>
          <row>
            <entry>reuseAddress</entry>
            <entry>Allow the server socket to be rebound even if in <link
            xl:href="http://www.ssfnet.org/Exchange/tcp/tcpTutorialNotes.html">TIME_WAIT</link></entry>
          </row>
          <row>
            <entry>soLingerTime</entry>
            <entry>A value &gt;=0 set the socket <link
            xl:href="http://stackoverflow.com/questions/3757289/tcp-option-so-linger-zero-when-its-required">
            SO_LINGER</link> value in milliseconds</entry>
          </row>
        </tbody>
      </tgroup>
    </table>
  </section>
  <section>
    <title>Configuring Common Services for Connection Factories</title>
    <para>xxx</para>
  </section>
  <section>
    <title>Configuring Connection Factories</title>
    <para>xxx</para>
  </section>
</section>
