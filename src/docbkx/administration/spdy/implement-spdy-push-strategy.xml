<?xml version="1.0" encoding="utf-8"?>
<!--
//  ========================================================================
//  Copyright (c) 1995-2012 Mort Bay Consulting Pty. Ltd.
//  ========================================================================
//  All rights reserved. This program and the accompanying materials
//  are made available under the terms of the Eclipse Public License v1.0
//  and Apache License v2.0 which accompanies this distribution.
//
//      The Eclipse Public License is available at
//      http://www.eclipse.org/legal/epl-v10.html
//
//      The Apache License v2.0 is available at
//      http://www.opensource.org/licenses/apache2.0.php
//
//  You may elect to redistribute this code under either of these licenses.
//  ========================================================================
-->
<section xml:id="spdy-implementing-push" version="5.0" xmlns="http://docbook.org/ns/docbook"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xl="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd">
    <title>Implement a custom SPDY PushStrategy</title>
    <para>
        The ReferrerPushStrategy that is distributed with Jetty (<xref linkend="spdy-configuring-push"/>) does a
        great job to automatically detect subresources to push for a given main resource. However there might be
        reasons to implement your own push strategy.
    </para>
    <section>
        <title>
            PushStrategy API
        </title>
        <para>The interface that needs to be implemented is<link
                xl:href="@JDURL@/org/eclipse/jetty/spdy/server/http/PushStrategy.html">PushStrategy</link>. For each
            request Jetty will call the
            <link xl:href="@JDURL@/org/eclipse/jetty/spdy/server/http/PushStrategy.html#apply(org.eclipse.jetty.spdy.api.Stream, org.eclipse.jetty.util.Fields, org.eclipse.jetty.util.Fields)">
                apply
            </link>
            method, which will return a Set with the resources to push. This is the apply method's signature:
            <informalexample>
                <programlisting language="java"><![CDATA[
                  /**
                       * <p>Applies the SPDY push logic for the primary resource.</p>
                       *
                       * @param stream the primary resource stream
                       * @param requestHeaders the primary resource request headers
                       * @param responseHeaders the primary resource response headers
                       * @return a list of secondary resource URIs to push
                       */
                      public Set<String> apply(Stream stream, Fields requestHeaders, Fields responseHeaders);
                  ]]></programlisting>
            </informalexample>
            The parameters are the
            <link xl:href="@JDURL@/org/eclipse/jetty/spdy/api/Stream.html">Stream
            </link>
            for the primary resource request, the request and the response header fields. Based on this information the
            implementation has to decide which resources to push and return a Set&lt;String&gt; containing the URLs for
            the resources to push.
            Jetty will then open a push stream for each URL returned in that list and push the contents of that file.
            This is the only method that you need to implement.
        </para>
    </section>
    <section>
        <title>ReferrerPushStrategy</title>
        <para>For reference and as a working example use the
            <link
                    xl:href="@JDURL@/org/eclipse/jetty/spdy/server/http/ReferrerPushStrategy.html">ReferrerPushStrategy
            </link>
            source code:
            <informalexample>
                <programlisting language="rjava-no-parse">
                    <filename>
                        @GITURL@/jetty-spdy/spdy-http-server/src/main/java/org/eclipse/jetty/spdy/server/http/ReferrerPushStrategy.java?h=jetty-9.2.x
                    </filename>
                </programlisting>
            </informalexample>
        </para>
    </section>
</section>
